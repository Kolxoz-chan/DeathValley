[gd_scene load_steps=10 format=2]

[ext_resource path="res://prefabs/characters/player.tscn" type="PackedScene" id=1]
[ext_resource path="res://prefabs/trees/tree_01.tscn" type="PackedScene" id=2]
[ext_resource path="res://prefabs/zones/burn_anomaly.tscn" type="PackedScene" id=3]
[ext_resource path="res://prefabs/terrains/test_terrain.tscn" type="PackedScene" id=4]
[ext_resource path="res://textures/materials/water_normal_01.jpg" type="Texture" id=5]
[ext_resource path="res://prefabs/zones/soda_anomaly.tscn" type="PackedScene" id=6]

[sub_resource type="PlaneMesh" id=1]
size = Vector2( 5, 5 )

[sub_resource type="Shader" id=2]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.1.stable's SpatialMaterial.

shader_type spatial;
render_mode async_visible,blend_mix,depth_draw_always,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_refraction;
uniform float refraction : hint_range(-16,16);
uniform vec4 refraction_texture_channel;
uniform sampler2D texture_normal : hint_normal;
uniform float normal_scale : hint_range(-16,16);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	
	NORMALMAP = texture(texture_normal,vec2(base_uv.x + sin(TIME) * 0.2, base_uv.y  + cos(TIME) * 0.2)).rgb;
	
	NORMALMAP_DEPTH = normal_scale;
	vec3 unpacked_normal = NORMALMAP;
	unpacked_normal.xy = unpacked_normal.xy * 2.0 - 1.0;
	unpacked_normal.z = sqrt(max(0.0, 1.0 - dot(unpacked_normal.xy, unpacked_normal.xy)));
	vec3 ref_normal = normalize( mix(NORMAL,TANGENT * unpacked_normal.x + BINORMAL * unpacked_normal.y + NORMAL * unpacked_normal.z,NORMALMAP_DEPTH) );
	vec2 ref_ofs = SCREEN_UV - ref_normal.xy * dot(texture(texture_refraction,base_uv),refraction_texture_channel) * refraction;
	float ref_amount = 1.0 - albedo.a * albedo_tex.a;
	EMISSION += textureLod(SCREEN_TEXTURE,ref_ofs,ROUGHNESS * 8.0).rgb * ref_amount;
	ALBEDO *= 1.0 - ref_amount;
	ALPHA = 1.0;
}
"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/albedo = Color( 0, 0.247059, 0.556863, 0.329412 )
shader_param/specular = 1.0
shader_param/metallic = 0.0
shader_param/roughness = 0.09
shader_param/point_size = 1.0
shader_param/refraction = 0.05
shader_param/refraction_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/normal_scale = 1.0
shader_param/uv1_scale = Vector3( 10, 5, 0 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_normal = ExtResource( 5 )

[node name="Spatial" type="Spatial"]

[node name="BurnAnomaly2" parent="." instance=ExtResource( 3 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -5.43087, -3.00189, 15.1876 )

[node name="BurnAnomaly" parent="." instance=ExtResource( 3 )]
transform = Transform( 0.244478, 0, 0.969655, 0, 1, 0, -0.969655, 0, 0.244478, 4.90848, -1.42154, 7.71169 )

[node name="Player" parent="." instance=ExtResource( 1 )]
transform = Transform( 0.244478, 0, 0.969655, 0, 1, 0, -0.969655, 0, 0.244478, 5.59038, -1.10023, 14.8916 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, 0.633219, 0.773973, 0, -0.773973, 0.633219, 0, 11.333, 16.1083 )

[node name="tree_01" parent="." instance=ExtResource( 2 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -4.06094, -1.31405, 19.7426 )

[node name="tree_02" parent="." instance=ExtResource( 2 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -6.30108, -3.13114, 13.2565 )

[node name="tree_03" parent="." instance=ExtResource( 2 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.43043, -3.06714, 7.94843 )

[node name="test_terrain" parent="." instance=ExtResource( 4 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.30617, -3.03152, 12.1654 )

[node name="CSGMesh" type="CSGMesh" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.79857, -3.74422, 11.7591 )
mesh = SubResource( 1 )
material = SubResource( 3 )

[node name="Water" type="Area" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.5228, -3.69308, 11.7591 )

[node name="CollisionShape" type="CollisionShape" parent="Water"]

[node name="SodaAnomaly" parent="." instance=ExtResource( 6 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.10947, -4.21649, 12.3373 )
